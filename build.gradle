plugins {
    id "architectury-plugin" version "$architectury_plugin_version"
    id "dev.architectury.loom" version "$loom_version" apply false
}

architectury {
    minecraft = rootProject.mc_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    loom {
        silentMojangMappingsLicense()
    }
    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.mc_version}"
        mappings loom.officialMojangMappings()
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"
    archivesBaseName = rootProject.mod_id
    def mod_version = System.getenv('SHA_VERSION') == "" || System.getenv('SHA_VERSION') == null ? "dev" : System.getenv('SHA_VERSION')
    version = rootProject.mc_version+ "-" + mod_version
    group = rootProject.maven_group
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        def targetVersion = 8
        if (JavaVersion.current().isJava9Compatible()) {
            options.release = targetVersion
        }
    }
    architectury {
        transformerVersion = rootProject.architectury_transformer_version
    }
    java {
        withSourcesJar()
    }
    processResources {
        doLast {
            def jsonMinifyStart = System.currentTimeMillis()
            def jsonMinified = 0
            def jsonBytesSaved = 0
            fileTree(dir: outputs.files.asPath, include: '**/*.json').each {
                File file = it
                jsonMinified++
                def oldLength = file.length()
                file.text = groovy.json.JsonOutput.toJson(new groovy.json.JsonSlurper().parse(file))
                jsonBytesSaved += oldLength - file.length()
            }
            println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
        }
    }
    publishing {
        repositories {
            maven {
                if ((System.getenv("MAVEN_USER") != '') && (System.getenv("MAVEN_PASSWORD") != '')) {
                    credentials {
                        username System.getenv("MAVEN_USER")
                        password System.getenv("MAVEN_PASSWORD")
                    }
                }
                if (System.getenv("MAVEN_URL") != '') {
                    url System.getenv("MAVEN_URL")
                } else {
                    url "file:///${project.buildDir}/repo"
                }
            }
        }
    }
}
